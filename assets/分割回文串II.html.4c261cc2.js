import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as o,b as n,d as e,e as s,a as c,r as i}from"./app.b03401c5.js";const l={},u=n("h1",{id:"\u5206\u5272\u56DE\u6587\u4E32ii",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5206\u5272\u56DE\u6587\u4E32ii","aria-hidden":"true"},"#"),s(" \u5206\u5272\u56DE\u6587\u4E32II")],-1),k={href:"https://leetcode.cn/problems/palindrome-partitioning-ii/description/",target:"_blank",rel:"noopener noreferrer"},r=s("\u94FE\u63A5"),d=c(`<p>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 s\uFF0C\u8BF7\u4F60\u5C06 s \u5206\u5272\u6210\u4E00\u4E9B\u5B50\u4E32\uFF0C\u4F7F\u6BCF\u4E2A\u5B50\u4E32\u90FD\u662F\u56DE\u6587\u3002</p><p>\u8FD4\u56DE\u7B26\u5408\u8981\u6C42\u7684 \u6700\u5C11\u5206\u5272\u6B21\u6570 \u3002</p><p>\u770B\u5230\u8FD9\u79CD\u6C42\u6781\u503C\u7684\u95EE\u9898\u5E94\u8BE5\u4E0D\u96BE\u60F3\u5230dp</p><p>dp[i]dp[i]dp[i] \uFF1A\u7D22\u5F15 0 \u5230 i \u7684\u5B50\u4E32 [0,i][0,i][0,i] \u7684\u6700\u5C0F\u5206\u5272\u6570</p><p>\u9898\u76EE\u6C42\uFF1Adp[n\u22121]dp[n-1]dp[n\u22121] , n \u4E3A\u5B57\u7B26\u4E32 s \u7684\u957F\u5EA6</p><p>base case \u662F\u4EC0\u4E48\uFF1F\u5982\u679C [0,i][0,i][0,i] \u5C31\u662F\u56DE\u6587\u4E32\uFF0C\u4E0D\u7528\u5207\u5272\uFF0C\u6B64\u65F6 dp[i]=0dp[i] = 0dp[i]=0</p><p>dp[i]dp[i]dp[i] \u5BF9\u5E94\u7684\u5B50\u4E32\u957F\u5EA6\u4E3A i+1i+1i+1\uFF0C\u6700\u591A\u80FD\u88AB\u5206\u5272 iii \u6B21 \u6240\u4EE5\u6211\u4EEC\u521D\u59CB\u5316 dp[i]=idp[i] = idp[i]=i\uFF0C\u5305\u542B\u4E86 base case\uFF1Adp[0]=0dp[0] = 0dp[0]=0</p><p>\u627E\u51FA\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B<br> \u6211\u4EEC\u5C1D\u8BD5\u5C06\u5B50\u95EE\u9898\u62C6\u6210\u89C4\u6A21\u5C0F\u4E00\u70B9\u7684\u5B50\u95EE\u9898\uFF0C\u627E\u5230\u5B83\u4EEC\u4E4B\u95F4\u7684\u8054\u7CFB\u3002</p><p>dp[i]dp[i]dp[i] \u8868\u793A [0,i][0,i][0,i] \u7684\u6700\u5C0F\u5206\u5272\u6570\uFF0C\u6211\u4EEC\u7528\u6307\u9488 j \u53BB\u5207\u5206\u4E00\u4E0B [0,i][0,i][0,i]\uFF0C\u5207\u4E00\u4E2A\u89C4\u6A21\u5C0F\u4E00\u70B9\u7684 dp \u5B50\u95EE\u9898\u51FA\u6765\u3002</p><p>\u5206\u6210\u4E86\u4E24\u90E8\u5206\uFF1A[0,j][0,j][0,j] \u548C [j+1,i][j+1,i][j+1,i]\uFF0C\u5176\u4E2D [0,j][0,j][0,j] \u7684\u6700\u5C0F\u5206\u5272\u6570\u662F dp[j]dp[j]dp[j]\uFF0C\u5B83\u76F8\u5BF9\u4E8E dp[i]dp[i]dp[i] \u662F\u8BA1\u7B97\u8FC7\u7684\u72B6\u6001\uFF0C\u6211\u4EEC\u8981\u627E\u51FA dp[i]dp[i]dp[i] \u548C dp[j]dp[j]dp[j] \u7684\u9012\u63A8\u5173\u7CFB\u3002</p><p>\u5BF9\u4E8E [j+1,i][j+1,i][j+1,i]\uFF0C\u5982\u679C\u5B83\u662F\u56DE\u6587\u4E32\uFF0C\u5C31\u6709\u9012\u63A8\u5173\u7CFB\uFF1Adp[i]=dp[j]+1dp[i] = dp[j] + 1dp[i]=dp[j]+1</p><p>\u56E0\u4E3A j \u6307\u9488\u662F\u5728\u626B [0,i][0,i][0,i]\uFF0Cj \u5728\u53D8\uFF0C\u5B83\u5207\u7684 [j+1,i][j+1,i][j+1,i] \u5982\u679C\u591A\u6B21\u662F\u56DE\u6587\u4E32\uFF0Cdp[i]dp[i]dp[i] \u53D6\u6700\u5C0F\u7684 dp[j]+1dp[j]+1dp[j]+1 \u5C31\u597D</p><p>\u4E24\u6B21 DP<br> \u56E0\u4E3A\u6211\u4EEC\u9700\u8981\u5224\u65AD [j+1,i][j+1,i][j+1,i] \u5B50\u4E32\u662F\u5426\u56DE\u6587\uFF0C\u5C31\u7528\u5230\u6628\u5929\u7684131\u9898\u7684 dp \u89E3\u6CD5\uFF1A</p><p>\u7528\u7684 dp \u4E8C\u7EF4\u6570\u7EC4\u5B58\u653E\u6BCF\u4E2A [i,j][i,j][i,j] \u5B50\u4E32\u662F\u5426\u56DE\u6587\u3002\u6240\u4EE5\u8FD9\u9053\u9898\u7528\u4E86\u4E24\u6B21 dp\uFF0C\u4F46\u4E24\u6B21\u90FD\u4E0D\u590D\u6742\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">minCut</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">const</span> isPali <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isPali<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>                            
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isPali<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> i <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isPali<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> i <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> isPali<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isPali<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                isPali<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>    
    <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>    
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPali<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isPali<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function v(m,b){const a=i("ExternalLinkIcon");return t(),o("div",null,[u,n("p",null,[n("a",k,[r,e(a)])]),d])}var y=p(l,[["render",v],["__file","\u5206\u5272\u56DE\u6587\u4E32II.html.vue"]]);export{y as default};
