import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,b as n,d as o,e as s,a as c,r as l}from"./app.fdd8adb7.js";const i={},u=n("h1",{id:"\u5343\u4F4D\u5206\u5272",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5343\u4F4D\u5206\u5272","aria-hidden":"true"},"#"),s(" \u5343\u4F4D\u5206\u5272")],-1),r={href:"https://leetcode.cn/problems/thousand-separator/description/",target:"_blank",rel:"noopener noreferrer"},k=s("\u94FE\u63A5"),d=c(`<h2 id="tolocalestring" tabindex="-1"><a class="header-anchor" href="#tolocalestring" aria-hidden="true">#</a> toLocaleString()</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>numObj<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">[</span>locales <span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \u6CE8<span class="token operator">:</span>\u5C0F\u6570\u90E8\u5206\u81EA\u52A8\u56DB\u820D\u4E94\u5165\u4E86
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">12345678912345</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">987654.321056</span><span class="token punctuation">;</span>
	
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;12,345,678,912,345&quot;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;987,654.321&quot;  \uFF08\u5C0F\u6570\u90E8\u5206\u56DB\u820D\u4E94\u5165\u4E86\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">thousandSeparator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> n<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6B63\u5E8F\u6392\u5217-\u5B57\u7B26\u6BCF\u4E09\u4F4D\u4ECE\u540E\u5F80\u524D\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5E8F\u6392\u5217-\u5B57\u7B26\u6BCF\u4E09\u4F4D\u4ECE\u540E\u5F80\u524D\u63D2\u5165" aria-hidden="true">#</a> \u6B63\u5E8F\u6392\u5217\uFF0C\u5B57\u7B26\u6BCF\u4E09\u4F4D\u4ECE\u540E\u5F80\u524D\u63D2\u5165</h2><ol><li>\u6BCF\u4E09\u4F4D\u4E00\u6B21\uFF0C\u5148\u5224\u65AD\u5B57\u7B26\u4E32\u8981\u5FAA\u73AF\u591A\u5C11\u6B21</li><li>\u6BCF\u6B21\u53D6\u51FA\u5B57\u7B26\u4E32\u540E\u4E09\u4F4D\u653E\u8FDB\u6570\u7EC4</li><li>\u622A\u53D6\u65B0\u7684\u5B57\u7B26\u4E32\uFF08\u6BCF\u6B21\u5220\u9664\u540E\u4E09\u4F4D\uFF09</li><li>\u8FD4\u56DE\u7531\u5206\u9694\u7B26 \u2018.\u2019 \u62FC\u63A5\u7684\u5B57\u7B26\u4E32</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">thousandSeparator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> time <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>time <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
          time<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(m,b){const a=l("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[k,o(a)])]),d])}var f=t(i,[["render",v],["__file","\u5343\u4F4D\u5206\u5272.html.vue"]]);export{f as default};
