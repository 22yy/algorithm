import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as o,b as n,d as e,e as s,a as c,r as l}from"./app.61f4c8a8.js";const i={},u=n("h1",{id:"\u56DE\u6587\u5B50\u4E32",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u56DE\u6587\u5B50\u4E32","aria-hidden":"true"},"#"),s(" \u56DE\u6587\u5B50\u4E32")],-1),r={href:"https://leetcode.cn/problems/palindromic-substrings/description/",target:"_blank",rel:"noopener noreferrer"},k=s("\u94FE\u63A5"),d=c(`<p><b>\u52A8\u6001\u89C4\u5212</b></p><ol><li><p>dp[i][j] \u8868\u793A\u8303\u56F4[i, j]\u7684\u5B50\u4E32\u662F\u5426\u4E3A\u56DE\u6587\u4E32\uFF0C \u5982\u679C\u662Fdp[i][j] = true, \u5426\u5219\u4E3Afalse</p></li><li><p>if (s[i] != s[j]), dp[i][j] = false</p></li></ol><p>if (s[i] === s[j]), \u6709\u4E09\u79CD\u60C5\u51B5</p><ul><li>\u4E0B\u6807 i === j, \u662F\u540C\u4E00\u4E2A\u5B57\u7B26\uFF0C\u662F\u56DE\u6587\u5B50\u4E32</li><li>i \u4E0E j \u76F8\u5DEE\u4E3A1\uFF0C \u4F8B\u5982aa, \u4E5F\u662F\u56DE\u6587\u5B50\u4E32</li><li>i \u4E0E j \u76F8\u5DEE\u5927\u4E8E 1 \u65F6\uFF0C \u4F8B\u5982cabac\uFF0C\u6B64\u65F6s[i] === s[j], \u770B i \u5230 j \u533A\u95F4\u662F\u4E0D\u662F\u56DE\u6587\u5C31\u770B aba \u662F\u4E0D\u662F\u56DE\u6587\uFF0C aba\u533A\u95F4\u5C31\u662F i + 1 \u4E0E j - 1 \u533A\u95F4\uFF0C\u8FD9\u4E2A\u533A\u95F4\u662F\u4E0D\u662F\u56DE\u6587\u5C31\u770Bdp[i + 1][j - 1] \u662F\u5426\u4E3Atrue</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> i <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token operator">++</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token operator">++</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p>\u521D\u59CB\u5316\u4E3Afalse</p></li><li><p>\u9996\u5148\u4ECE\u9012\u63A8\u516C\u5F0F\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u60C5\u51B5\u4E09\u662F\u6839\u636Edp[i + 1][j - 1]\u662F\u5426\u4E3Atrue\uFF0C\u5728\u5BF9dp[i][j]\u8FDB\u884C\u8D4B\u503Ctrue\u7684\u3002</p></li></ol><p>dp[i + 1][j - 1] \u5728 dp[i][j]\u7684\u5DE6\u4E0B\u89D2</p><p>\u8981\u4ECE\u4E0B\u5230\u4E0A\uFF0C\u4ECE\u5DE6\u5230\u53F3\u904D\u5386\uFF0C\u8FD9\u6837\u4FDD\u8BC1dp[i + 1][j - 1]\u90FD\u662F\u7ECF\u8FC7\u8BA1\u7B97\u7684</p><ol start="5"><li>\u4E3E\u4F8B\u63A8\u5BFC</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">countSubstrings</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              result<span class="token operator">++</span><span class="token punctuation">;</span>
              dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              result<span class="token operator">++</span><span class="token punctuation">;</span>
              dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function v(b,m){const a=l("ExternalLinkIcon");return t(),o("div",null,[u,n("p",null,[n("a",r,[k,e(a)])]),d])}var _=p(i,[["render",v],["__file","\u56DE\u6587\u5B50\u4E32.html.vue"]]);export{_ as default};
