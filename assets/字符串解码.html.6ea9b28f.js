import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as o,b as n,d as e,e as s,a as c,r as l}from"./app.b03401c5.js";const u={},i=n("h1",{id:"\u5B57\u7B26\u4E32\u89E3\u7801",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32\u89E3\u7801","aria-hidden":"true"},"#"),s(" \u5B57\u7B26\u4E32\u89E3\u7801")],-1),k=n("p",null,"\u7ED9\u5B9A\u4E00\u4E2A\u7ECF\u8FC7\u7F16\u7801\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u5B83\u89E3\u7801\u540E\u7684\u5B57\u7B26\u4E32\u3002",-1),r=n("p",null,"\u7F16\u7801\u89C4\u5219\u4E3A: k[encoded_string]\uFF0C\u8868\u793A\u5176\u4E2D\u65B9\u62EC\u53F7\u5185\u90E8\u7684 encoded_string \u6B63\u597D\u91CD\u590D k \u6B21\u3002\u6CE8\u610F k \u4FDD\u8BC1\u4E3A\u6B63\u6574\u6570\u3002",-1),d=n("p",null,"\u4F60\u53EF\u4EE5\u8BA4\u4E3A\u8F93\u5165\u5B57\u7B26\u4E32\u603B\u662F\u6709\u6548\u7684\uFF1B\u8F93\u5165\u5B57\u7B26\u4E32\u4E2D\u6CA1\u6709\u989D\u5916\u7684\u7A7A\u683C\uFF0C\u4E14\u8F93\u5165\u7684\u65B9\u62EC\u53F7\u603B\u662F\u7B26\u5408\u683C\u5F0F\u8981\u6C42\u7684\u3002",-1),m=n("p",null,"\u6B64\u5916\uFF0C\u4F60\u53EF\u4EE5\u8BA4\u4E3A\u539F\u59CB\u6570\u636E\u4E0D\u5305\u542B\u6570\u5B57\uFF0C\u6240\u6709\u7684\u6570\u5B57\u53EA\u8868\u793A\u91CD\u590D\u7684\u6B21\u6570 k \uFF0C\u4F8B\u5982\u4E0D\u4F1A\u51FA\u73B0\u50CF 3a \u6216 2[4] \u7684\u8F93\u5165\u3002",-1),v=n("p",null,'s = "3[a]2[bc]" \u8F93\u51FA\uFF1A"aaabcbc"',-1),b={href:"https://leetcode.cn/problems/decode-string/description/",target:"_blank",rel:"noopener noreferrer"},f=s("\u94FE\u63A5"),_=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">decodeString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> numStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u500D\u6570\u7684\u6808</span>
  <span class="token keyword">let</span> strStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58 \u5F85\u62FC\u63A5\u7684str \u7684\u6808</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u500D\u6570\u7684\u201C\u642C\u8FD0\u5DE5\u201D</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u5B57\u7B26\u4E32\u7684\u201C\u642C\u8FD0\u5DE5\u201D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> char <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9010\u5B57\u7B26\u626B\u63CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9047\u5230\u6570\u5B57</span>
      num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B97\u51FA\u500D\u6570</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">==</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9047\u5230 [</span>
      strStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// result\u4E32\u5165\u6808</span>
      result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u5165\u6808\u540E\u6E05\u96F6</span>
      numStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u500D\u6570num\u8FDB\u5165\u6808\u7B49\u5F85</span>
      num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5165\u6808\u540E\u6E05\u96F6</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">==</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9047\u5230 ]\uFF0C\u4E24\u4E2A\u6808\u7684\u6808\u9876\u51FA\u6808</span>
      <span class="token keyword">let</span> repeatTimes <span class="token operator">=</span> numStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u62F7\u8D1D\u6B21\u6570</span>
      result <span class="token operator">=</span> strStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>repeatTimes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6784\u5EFA\u5B50\u4E32</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> char<span class="token punctuation">;</span> <span class="token comment">// \u9047\u5230\u5B57\u6BCD\uFF0C\u8FFD\u52A0\u7ED9result\u4E32</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u76F4\u63A5\u8BA9 ] \u4E4B\u524D\u7684\u6240\u6709\u5B57\u7B26\u9010\u4E2A\u5165\u6808 stack</li><li>\u7136\u540E\u4E00\u4E2A\u4E2A\u51FA\u6808\u8003\u5BDF\uFF0C\u987A\u5E8F\u5C31\u662F\u5148\u6784\u5EFA\u5185\u5C42</li><li>\u9996\u5148\u9047\u5230\u7684\u80AF\u5B9A\u662F[]\u4E2D\u7684\u5B57\u6BCD\uFF0C\u4E00\u4E2A\u4E2A\u62FC\u6210\u5B50\u4E32\uFF0C\u76F4\u5230\u9047\u5230 [ \u505C\u4E0B\u6765</li><li>\u63A5\u7740\u9047\u5230\u6570\u5B57\uFF0C\u6570\u5B57\u51FA\u6808\uFF0C\u7EC4\u6210\u500D\u6570\uFF0C\u76F4\u5230\u9047\u5230 \u201C\u975E\u6570\u5B57\u201D</li><li>\u73B0\u5728\u6709\u4E86\u5B57\u6BCD\u4E32\u548C\u500D\u6570\uFF0C\u5C31\u6784\u5EFA\u51FA\u5C40\u90E8\u5B50\u4E32\uFF0C\u4E00\u6574\u4E2A\u5B50\u4E32\u63A8\u5165\u6808</li><li>\u8FD9\u6837\uFF0C\u4E00\u4E2A [] \u4E2D\u7684\u5B50\u4E32\u5C31\u6784\u5EFA\u597D\u4E86\u653E\u5728 stack \u91CC</li><li>\u5B83\u518D\u548C\u53EF\u80FD\u6709\u7684\u522B\u7684\u5B57\u6BCD\u4E00\u8D77\u7EC4\u6210\u5B50\u4E32\uFF0C\u518D\u4E00\u8D77\u88AB\u500D\u6570\u62F7\u8D1D</li><li>\u518D\u56DE\u5230 stack \u91CC\uFF0C\u6700\u540E\u5C06 stack \u91CC\u7684\u9879\u5269\u4E0B\u90FD\u662F\u5B57\u7B26\u4E32\uFF0C join \u62FC\u63A5\u6210\u5B57\u7B26\u4E32\u8FD4\u56DE</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">decodeString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> char <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">!==</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ] \u524D\u7684\u5B57\u7B26\u90FD\u5165\u6808</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> cur <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F39\u51FA\u4E00\u4E2A\u6765\u68C0\u6D4B</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u7EC4\u88C5\u5B57\u7B26\u4E32</span>
    <span class="token comment">// \u63A5\u4E0B\u6765\u80AF\u5B9A\u662F\u9047\u5230\u5B57\u6BCD\uFF0C\u76F4\u5230\u9047\u5230 [</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!==</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">=</span> cur <span class="token operator">+</span> str<span class="token punctuation">;</span> <span class="token comment">// cur\u5B57\u7B26\u52A0\u5728\u5DE6\u8FB9</span>
      cur <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u518D\u62C9\u51FA\u4E00\u4E2A</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6B64\u65F6cur\u4E3A [\uFF0C\u63A5\u4E0B\u6765\u8981\u9047\u5230\u6570\u5B57</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    cur <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E0B\u4E00\u4E2A\u5C06 [ \u8986\u76D6</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      num <span class="token operator">=</span> cur <span class="token operator">+</span> num<span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u5B57\u7B26\u52A0\u5728\u5DE6\u8FB9</span>
      cur <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u518D\u62C9\u51FA\u4E00\u4E2A</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u73B0\u5728\u8981\u4E48\u662F\u5B57\u6BCD\uFF0C\u8981\u4E48\u662F [</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(w,y){const a=l("ExternalLinkIcon");return p(),o("div",null,[i,k,r,d,m,v,n("p",null,[n("a",b,[f,e(a)])]),_])}var x=t(u,[["render",h],["__file","\u5B57\u7B26\u4E32\u89E3\u7801.html.vue"]]);export{x as default};
